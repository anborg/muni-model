syntax = "proto2";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
package muni.model;

option java_outer_classname = "Model"; //muni.api.Model
option java_generic_services = false; //default, prevents complex generic
option java_multiple_files = false; //default behavior

message Person{
  //Output only
  optional string id = 3;
  optional string firstName = 4; // optional added to test hasFirstName()
  optional string lastName = 5;
  //ContactChannels contactChannels = 8;
  optional string email = 6;
  optional string phone1 = 7;
  optional string phone2 = 8;
  optional PostalAddress address = 9; //For objects no need for optional, hasAddress() works
  //optional  bool dirty = 10 [default = false];//for boolean getDirty() default is enough, no need for optional
  map<string, Xref> xrefAccounts = 11; // Will be empty for Subsystem Person objects.


  //Output only
  optional google.protobuf.Timestamp createTime = 1;
  //Output only
  optional google.protobuf.Timestamp updateTime = 2;
}

// Person -> Xref of Person , Case -> Xref if Case
message Xref{
  optional string id = 6; // golden personId, or, caseId
  optional string xrefSystemId = 7; // {"AMANDA"|"HANSEN" ...}
  optional string xrefId = 8;  //subsystem personid or caseid
  repeated Case recentCases = 9;

  //Output only
  optional google.protobuf.Timestamp createTime = 1;
  //Output only
  optional google.protobuf.Timestamp updateTime = 2;
  //Output only  - updated by person/{id}/xref/{subsysId}/sync
  optional google.protobuf.Timestamp subsysRefreshTime = 3;


}
//Listed in the order of dependency
message PostalAddress{
  optional string id = 3;
  optional string streetNum = 4;
  optional string streetName = 5;
  optional string city = 6;
  optional string province = 7;
  optional string country = 8;
  optional string postalCode = 9;
  optional double lat = 10;//geo
  optional double lon = 11;
  //optional  bool dirty = 12 [default=false];
  //Output only
  optional google.protobuf.Timestamp createTime = 1;
  //Output only
  optional google.protobuf.Timestamp updateTime = 2;
}





message Case{
  optional string id = 3;
  optional string status =4; //TODO  convert to enum // BACKLOG, INPROGRESS, WAITING, DONE,

  optional Person reportedByCustomer=5;
  optional Person createdByEmployee = 6;
  //optional bool dirty = 7 [default = false];
  repeated string tags = 8 ;//store a list of tags that categrizes //TODO Enum?
  optional string description = 9;
  //Output only
  optional google.protobuf.Timestamp createTime = 1;
  optional google.protobuf.Timestamp updateTime = 2;
}


//message Subsystem{
//  optional string subsystemId =1; //TODO avoid converting to enum, that would make api less generic?
//
//}

message Organization {
  //Output only
  optional string id = 3;
  optional string name = 4;
  optional string website = 5;
  optional string email = 6;
  optional string phone1 = 7;
  optional string phone2 = 8;
  optional PostalAddress address = 9;
  optional Person contactPerson = 10;
  //Output only
  optional google.protobuf.Timestamp createTime = 1;
  //Output only
  optional google.protobuf.Timestamp updateTime = 2;
}

//message ContactChannels{ //aggregate, some may be in different tables in backend
//  Phone phone1 =1;
//  Phone phone2 = 2;
//  string email = 3;
//  PostalAddress postalAddress = 4;
//}

//message Phone{// modeled separately to apply clean data rules
//  int32 countryCode = 1;
//  string number = 2;
//  string ext = 3;
//}

//message Email{ // Modeled separately to apply clean data rules
//  string value=1;
//}


//https://developers.google.com/protocol-buffers/docs/proto3#any

message ErrorInfo {
  optional string message = 1;
  repeated google.protobuf.Any details = 2;
}